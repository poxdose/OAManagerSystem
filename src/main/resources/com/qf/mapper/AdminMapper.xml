<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.mapper.AdminMapper">
    <!-- namespace表示相对路径下接口的地址，insert id表示方法名，parametertype表示参数的类型-->
    <!--获取所有课程-->
    <select id="selectKecheng" resultType="kecheng">
    select * from kecheng
</select>
    <!--添加课程-->
    <insert id="addKecheng" parameterType="kecheng">
 insert into kecheng(kname) values(#{kname})
</insert>
    <!--删除课程-->
    <delete id="deleteKecheng" parameterType="int">
        delete from kecheng where kid=#{kid}
    </delete>
    <!--   修改课程-->
    <update id="updateKecheng" parameterType="kecheng">
    update kecheng set kname=#{kname} where kid=#{kid}
    </update>
    <select id="getKechengByKid" resultType="kecheng">
        select * from kecheng where kid=#{kid}
    </select>


    <!--  roleeeeeeeeeeeeee  -->
    <!--获取所有角色-->
    <select id="selectRole" resultType="role">
    select  * from role
    </select>
    <!--增加角色-->
    <insert id="addRole" parameterType="role">
    insert into role(roles) values(#{role})
    </insert>
    <!--    删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from role where role=#{roleid}
    </delete>
    <!--   修改课程-->
    <update id="updateRole" parameterType="role">
    update role set roles=#{roles} where role=#{role}
    </update>
    <select id="getRoleByRoleid" resultType="role">
        select * from role where role=#{rid}
    </select>

    <!--userrrrrrrrrrrrrrrrr-->
    <!--获取所有用户-->
    <select id="selectUser" resultType="user">
    select  * from `user`
    </select>
    <!--增加角色由teacher完成-->
    <!--    删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete from `user` where uid=#{uid}
    </delete>
    <!--   根据用户名修改用户，只能重置密码为123456-->
    <update id="updatepassword" parameterType="user">
    update `user` set upwd=e10adc3949ba59abbe56e057f20f883e where uname=#{uname}
    </update>
    <!--    查询用户，模糊搜索-->
    <select id="selectUserByUsername" resultType="user">
        select * from `user` where true
        <if test="_parameter!=null"> and uname LIKE #{uname}</if>
    </select>
    <!--根据uid得到user对象-->
    <select id="getUserByUid" resultType="user">
        select * from `user` where uid=#{uid}
    </select>

    <!--员工管理 员工信息管理 含搜索功能 -->
    <!--获取所有员工/教师-->
    <select id="selectTeacher" resultType="teacher">
    select  * from teacher
    </select>
    <!--  根据员工名字更改员工信息  -->
    <update id="updateTeacher" parameterType="teacher">
    update teacher set tname=#{tname},tage=#{tage},tsex=#{tsex},role_id=#{role_id} where tname=#{tname}
    </update>

    <!--    查询员工，模糊搜索-->
    <select id="selectTeacherByTeachername" resultType="teacher">
        select * from `teacher` where true

        <if test="_parameter!=null"> and tname LIKE #{tname}</if>

    </select>
    <!--根据员工id获取teacher对象-->
    <select id="getTeacherByTid" resultType="teacher">
        select * from teacher where tid=#{tid}
    </select>
    <!--班级管理-->
    <select id="selectClass" resultType="clazz">
    select  * from `class`
    </select>
    <!--增加-->
    <insert id="addClass" parameterType="clazz">
    insert into `class`(cname,kid,tid) values(#{cname},#{kid},#{tid})
    </insert>
    <!--    删除-->
    <delete id="deleteClass" parameterType="int">
        delete from `class` where cid=#{cid}
    </delete>
    <!--   修改-->
    <update id="updateClass" parameterType="clazz">
    update `class` set cname=#{cname},kid=#{kid},tid=#{tid} where cid=#{cid}
    </update>
    <!--    根据cid获得班级对象-->
    <select id="getClassByCid" resultType="clazz">
        select * from `class` where cid=#{cid}
    </select>
</mapper>
